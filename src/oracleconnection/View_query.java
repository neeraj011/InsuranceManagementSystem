/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oracleconnection;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RENU
 */
public class View_query extends javax.swing.JFrame {

    /**
     * Creates new form View_query
     */
    public View_query() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        query = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tab = new javax.swing.JTable();
        c1 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        query.setColumns(20);
        query.setLineWrap(true);
        query.setRows(5);
        query.setWrapStyleWord(true);
        query.setEnabled(false);
        jScrollPane2.setViewportView(query);

        jLabel1.setText("Choose Query:");

        jLabel2.setText("Query:");

        jButton1.setText("Run");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tab);

        c1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No. of policies sold by agents from mumbai", "No. of policies sold by Agent from Pune", "Which agent has sold jeevanbima policy to which holder", "Policy held by each holder grouped by holder name and policy name", "Policy held by each holder for the duration of less than 10 years and nominated claimant whose gender is female", "Average commission of each agent so far", "Total Amount by agent from mumbai", "Select agent details from 2 databases", " " }));
        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3))
                    .addComponent(jButton3)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(jButton1)
                        .addGap(99, 99, 99)
                        .addComponent(jButton2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(c1, 0, 574, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
          Connection conn=null;
          Connection conn1=null;
        try
        {
            String driverName= "oracle.jdbc.driver.OracleDriver";
            Class.forName(driverName);
            String serverName = "DESKTOP-H547RQN";
            String serverPort = "1521";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@"+serverName+":"+serverPort+":"+sid;
            String username = "Juhi_XE";
            String password = "oracle";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("System successfully connected to database");
            
        }
        
        catch(ClassNotFoundException e)
                {
                    System.out.println("Error 1");
                }
        catch(SQLException e)
                {
                    System.out.println("Error 2");
                }
        try
        {
            String driverName= "oracle.jdbc.driver.OracleDriver";
            Class.forName(driverName);
            String serverName = "localhost";
            String serverPort = "1521";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@"+serverName+":"+serverPort+":"+sid;
            String username = "Aishu";
            String password = "oracle";
            conn1 = DriverManager.getConnection(url, username, password);
            System.out.println("System successfully connected to database");
            
        }
        catch(ClassNotFoundException e)
                {
                    System.out.println("Error 1");
                }
        catch(SQLException e)
                {
                    System.out.println("Error 2");
                }
        DefaultTableModel d1=(DefaultTableModel)tab.getModel();
        d1.setRowCount(0);
        tab.setModel(d1);
        try
        {
            Statement st = conn.createStatement();
            Statement st1=conn1.createStatement();
               String str=query.getText();
               if(c1.getSelectedIndex()==7)
               {
                   str="Select * from agent";
               }
               ResultSet rs=st.executeQuery(str);
               ResultSet rs1=st1.executeQuery(str);
               ResultSetMetaData rsmd=rs.getMetaData();
               int col=rsmd.getColumnCount();
               ResultSetMetaData rsmd1=rs1.getMetaData();
               int col1=rsmd1.getColumnCount();
               String name[]=new String[col];
               int i,j=0;
               tab.getTableHeader().setVisible(true);
               for(i=1;i<=col;i++)
                   name[i-1]=rsmd.getColumnLabel(i);
               d1.setColumnIdentifiers(name);
                 while(rs.next()){
               String[] n=new String[col];
                     for(i=1;i<=col;i++)
               {
                   n[i-1]=rs.getString(i);
                }
               d1.addRow(n);
               tab.setModel(d1);
               j++;
              }
                 if(c1.getSelectedIndex()==7){
                 while(rs1.next()){
               String[] n=new String[col];
                     for(i=1;i<=col;i++)
               {
                   n[i-1]=rs1.getString(i);
                }
               d1.addRow(n);
               tab.setModel(d1);
               j++;}
              }
                 if(j<1)
            {
                JOptionPane.showMessageDialog(null,"No record found","ERROR",JOptionPane.ERROR_MESSAGE);
            }
            rs.close();
           
        }
        catch(SQLException e)
        {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.setVisible(false);
        Form1 l=new Form1();
        l.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
 DefaultTableModel d1=(DefaultTableModel)tab.getModel();
        d1.setRowCount(0);
        tab.setModel(d1);
        tab.getTableHeader().setVisible(false);
        query.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
      int ch=c1.getSelectedIndex();
            switch(ch)
            {
                case 0:
                    query.setText("select count(*) as ‘No_of_policies’from policy where policy_key in (select policy_key from sells where agent_id in (select agent_id from Agent1@jn))");
                    break;
                case 1:
                    query.setText("select count(*) from policy where policy_key in (select policy_key from sells where agent_id in (select agent_id from Agent2@ja where address=\'Pune\'))");
                    break;
                case 2:
                    query.setText("select p.holder_name,po.policy_name,i.amount from policy_holder p inner join insured_by i on i.holder_key=p.holder_key inner join policy po on i.policy_key=po.policy_key group by p.holder_name,po.policy_name,i.amount");
                    break;
                case 3:
                    query.setText("Select po.holder_name,p.policy_name From policy_holder po Inner join insured_by i on i.holder_key=po.holder_key Inner join policy on i.policy_key=p.policy_key Group by po.holder_name,po.policy_name");
                    break;
                case 4:
                    query.setText("Select ph.holder_key,ph.holder_name,c.claim_key,c.claim_name,p.policy_name From policy_holder ph, claimant01 c, policy p, insured_by i  Where ph.holder_key=i.holder_key And c.claim_key=i.claim_key And p.policy_key=i.policy_key And p.duration<=10 And c.claim_gender='f'");
                    break;
                case 5:
                    query.setText("Select a.agent_id,a.agent_name,avg(s.commission)From sells  s,agent a Where a.agent_id=s.agent_id Group by a.agent_id,a.agent_name");
                    break;
                case 6:
                    query.setText("Select a.agent_id,a.agent_name,sum(i.amount) From agent a, insured_by i, sells s Where a.agent_id=s.agent_id And s.policy_key=i.policy_key And a.address='mumbai' Group by a.agent_id,a.agent_name order by sum(i.amount) desc");
                    break;


            }
    }//GEN-LAST:event_c1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View_query.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View_query.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View_query.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View_query.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View_query().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> c1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea query;
    private javax.swing.JTable tab;
    // End of variables declaration//GEN-END:variables
}
