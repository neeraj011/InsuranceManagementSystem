/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oracleconnection;

import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static oracleconnection.Agent.conn;

/**
 *
 * @author RENU
 */
public class Claimant extends javax.swing.JFrame {

    /**
     * Creates new form Claimant
     */
    public Claimant() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        c_gen = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        ch_ckey = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        insert = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        c_mob = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        c_key = new javax.swing.JTextField();
        c_name = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab = new javax.swing.JTable();
        c_dob = new javax.swing.JTextField();
        choose = new javax.swing.JComboBox<>();
        c_add = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        c_gen.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("Claim_key");

        ch_ckey.setEnabled(false);
        ch_ckey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ch_ckeyActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText("Choose Claim_key");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Claim_name");

        insert.setText("Insert");
        insert.setEnabled(false);
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("CLAIMANT");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Claim_address");

        update.setText("Update");
        update.setEnabled(false);
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setText("Claim_gender");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setText("Claim_mobile");

        c_mob.setEnabled(false);
        c_mob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_mobActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Claim_DOB");

        delete.setText("Delete");
        delete.setEnabled(false);
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        c_key.setAlignmentX(60.0F);
        c_key.setEnabled(false);
        c_key.setName(""); // NOI18N
        c_key.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_keyActionPerformed(evt);
            }
        });

        c_name.setEnabled(false);

        tab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Claim_key", "Claim_name", "Claim_DOB", "Claim_address", "Claim_gender", "Claim_mobile"
            }
        ));
        jScrollPane1.setViewportView(tab);

        c_dob.setEnabled(false);
        c_dob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_dobActionPerformed(evt);
            }
        });

        choose.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Insert", "Update", "Delete" }));
        choose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseActionPerformed(evt);
            }
        });

        c_add.setEnabled(false);

        jLabel2.setText("Choose:");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(choose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(294, 294, 294))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel9)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel11)
                                .addComponent(jLabel10)))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(c_key, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ch_ckey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c_name, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c_dob, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c_add, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c_gen, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c_mob, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(insert)
                        .addGap(32, 32, 32)
                        .addComponent(update)
                        .addGap(26, 26, 26)
                        .addComponent(delete)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(choose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ch_ckey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(c_key, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c_dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c_add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c_gen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c_mob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insert)
                    .addComponent(update)
                    .addComponent(delete))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
String cname,add,gen,dob;
        int key;
        long mob;
        
        try
        {
            String driverName= "oracle.jdbc.driver.OracleDriver";
            Class.forName(driverName);
            String serverName = "DESKTOP-H547RQN";
            String serverPort = "1521";
            String skey = "XE";
            String url = "jdbc:oracle:thin:@"+serverName+":"+serverPort+":"+skey;
            String username = "Juhi_XE";
            String password = "oracle";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("System successfully connected to database");
            
        }
        catch(ClassNotFoundException e)
                {
                    System.out.println("Error 1");
                }
        catch(SQLException e)
                {
                    System.out.println("Error 2");
                }
                
                key=Integer.parseInt(c_key.getText());
                cname=c_name.getText();
                add=c_add.getText();
                gen=c_gen.getText();
                dob=c_dob.getText();
                
                mob=Long.parseLong(c_mob.getText());
                int selected=Integer.parseInt(ch_ckey.getSelectedItem().toString());
                try
                {
                    Statement st = conn.createStatement();
                    st.executeUpdate("Update claimant01 set claim_key="+key+",claim_name='"+cname+"',claim_address='"+add+"',claim_gender='"+gen+"',claim_dob='"+dob+"',claim_mob="+mob+" where claim_key="+selected+"");
                    st.close();
                    JOptionPane.showMessageDialog(null,"Updated!","Successful",JOptionPane.PLAIN_MESSAGE);
                }
                catch(Exception e)
                {
                    e.printStackTrace();
                }
                dis();
                clear();
    }//GEN-LAST:event_updateActionPerformed

    private void c_mobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_mobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c_mobActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
    String cname,add,gen,dob;
        int key;
        long mob;
        
        try
        {
            String driverName= "oracle.jdbc.driver.OracleDriver";
            Class.forName(driverName);
            String serverName = "DESKTOP-H547RQN";
            String serverPort = "1521";
            String sid = "XE";
            String url = "jdbc:oracle:thin:@"+serverName+":"+serverPort+":"+sid;
            String username = "Juhi_XE";
            String password = "oracle";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("System successfully connected to database");
            
        }
        catch(ClassNotFoundException e)
                {
                    System.out.println("Error 1");
                }
        catch(SQLException e)
                {
                    System.out.println("Error 2");
                }
                
                 int selected=Integer.parseInt(ch_ckey.getSelectedItem().toString());
                try
                {
                    Statement st = conn.createStatement();
                    st.executeUpdate("delete from claimant01 where claim_key="+selected+"");
                    st.close();
                    JOptionPane.showMessageDialog(null,"Deleted!","Successful",JOptionPane.PLAIN_MESSAGE);
                }
                catch(Exception e)
                {
                    e.printStackTrace();
                }
                dis();
                clear();
    }//GEN-LAST:event_deleteActionPerformed

    private void c_keyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_keyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c_keyActionPerformed

    private void chooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseActionPerformed
 String cname,add,gen,dob;
        int key;
        long mob;
                  
        try
        {
            String driverName= "oracle.jdbc.driver.OracleDriver";
            Class.forName(driverName);
            String serverName = "DESKTOP-H547RQN";
            String serverPort = "1521";
            String skey = "XE";
            String url = "jdbc:oracle:thin:@"+serverName+":"+serverPort+":"+skey;
            String username = "Juhi_XE";
            String password = "oracle";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("System successfully connected to database");
            
        }
        catch(ClassNotFoundException e)
                {
                    System.out.println("Error 1");
                }
        catch(SQLException e)
                {
                    System.out.println("Error 2");
                }
        switch(choose.getSelectedIndex())
        {
            case 0: 
                en();
                clear();
                insert.setEnabled(true);
                update.setEnabled(false);
                delete.setEnabled(false);
                ch_ckey.setEnabled(false);
                ch_ckey.removeAllItems();
                break;
            case 1: 
            case 2:
                ch_ckey.setEnabled(true);
                ch_ckey.removeAllItems();
                try
                {
                    Statement st = conn.createStatement();
                    ResultSet rs = st.executeQuery("Select claim_key from claimant01");
                    int i=0;
                    while(rs.next())
                    {
                        ch_ckey.addItem(String.valueOf(rs.getInt(1)));
                         i++;
                    }
                    if(i<1)
                    {
                        JOptionPane.showMessageDialog(null,"No record found","ERROR",JOptionPane.ERROR_MESSAGE);
                    }
                    rs.close();
                }
                catch(Exception e)
                {
                    e.printStackTrace();
                }
                
                en();
                if(choose.getSelectedIndex()==1){
                    update.setEnabled(true);
                    delete.setEnabled(false);
                    insert.setEnabled(false);
                }
                else if(choose.getSelectedIndex()==2){
                    delete.setEnabled(true);
                insert.setEnabled(false);
                update.setEnabled(false);}
                break;
                           
        }
    }//GEN-LAST:event_chooseActionPerformed

    private void c_dobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_dobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c_dobActionPerformed

    private void ch_ckeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ch_ckeyActionPerformed
        try
        {
            String driverName= "oracle.jdbc.driver.OracleDriver";
            Class.forName(driverName);
            String serverName = "DESKTOP-H547RQN";
            String serverPort = "1521";
            String skey = "XE";
            String url = "jdbc:oracle:thin:@"+serverName+":"+serverPort+":"+skey;
            String username = "Juhi_XE";
            String password = "oracle";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("System successfully connected to database");
            
        }
        catch(ClassNotFoundException e)
                {
                    System.out.println("Error 1");
                }
        catch(SQLException e)
                {
                    System.out.println("Error 2");
                }
        
         if(ch_ckey.getItemCount()!=0)  { 
             int selected=Integer.parseInt(String.valueOf(ch_ckey.getSelectedItem()));
                System.out.println(selected);
        try
        {
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("Select * from claimant01 where claim_key="+selected+"");
            int i=0;
            if(rs.next())
            {
                c_key.setText(String.valueOf(rs.getInt(1)));
                c_name.setText(rs.getString(2));
                c_dob.setText(rs.getString(3));
                c_add.setText(rs.getString(4));
                c_gen.setText(rs.getString(5));
                c_mob.setText(rs.getString(6));
                                i++;
            }
            if(i<1)
            {
                JOptionPane.showMessageDialog(null,"No record found","ERROR",JOptionPane.ERROR_MESSAGE);
            }
            rs.close();
        }
            catch(Exception e)
            {
            e.printStackTrace();
        }
         }
    }//GEN-LAST:event_ch_ckeyActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        Insert_form l=new Insert_form();
        l.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
String cname,add,gen,dob;
        int key;
        long mob;
        DefaultTableModel d2= (DefaultTableModel)tab.getModel();
            d2.setRowCount(0);
            tab.setModel(d2);
        try
        {
            String driverName= "oracle.jdbc.driver.OracleDriver";
            Class.forName(driverName);
            String serverName = "DESKTOP-H547RQN";
            String serverPort = "1521";
            String skey = "XE";
            String url = "jdbc:oracle:thin:@"+serverName+":"+serverPort+":"+skey;
            String username = "Juhi_XE";
            String password = "oracle";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("System successfully connected to database");
            
        }
        catch(ClassNotFoundException e)
                {
                    System.out.println("Error 1");
                }
        catch(SQLException e)
                {
                    System.out.println("Error 2");
                }
        try
        {
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("Select * from claimant01");
            int i=0;
            while(rs.next())
            {
                  key = rs.getInt(1);
                cname =rs.getString(2);
                dob =rs.getString(3);
                add =rs.getString(4);
                gen =rs.getString(5);
                mob =rs.getLong(6);
                    
                d2.addRow(new Object[]{key,cname,dob,add,gen,mob});
                tab.setModel(d2);
                
                i++;
            }
            /*if(i<1)
            {
                JOptionPane.showMessageDialog(null,"No record found","ERROR",JOptionPane.ERROR_MESSAGE);
            }*/
            rs.close();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowGainedFocus

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
     String cname,add,gen,dob;
        int key;
        long mob;
        try
        {
            String driverName= "oracle.jdbc.driver.OracleDriver";
            Class.forName(driverName);
            String serverName = "DESKTOP-H547RQN";
            String serverPort = "1521";
            String skey = "XE";
            String url = "jdbc:oracle:thin:@"+serverName+":"+serverPort+":"+skey;
            String username = "Juhi_XE";
            String password = "oracle";
            conn = DriverManager.getConnection(url, username, password);
            System.out.println("System successfully connected to database");
            
        }
        catch(ClassNotFoundException e)
                {
                    System.out.println("Error 1");
                }
        catch(SQLException e)
                {
                    System.out.println("Error 2");
                }        
        key=Integer.parseInt(c_key.getText());
                cname=c_name.getText();
                add=c_add.getText();
                gen=c_gen.getText();
                dob=c_dob.getText();
                
                mob=Long.parseLong(c_mob.getText());
                try
                {
                    Statement st = conn.createStatement();
                    st.executeUpdate("Insert into claimant01 values("+key+",'"+cname+"','"+dob+"','"+add+"','"+gen+"',"+mob+")");
                    st.close();
                    JOptionPane.showMessageDialog(null,"Record Inserted!","Successful",JOptionPane.PLAIN_MESSAGE);
                }
                catch(Exception e)
                {
                    e.printStackTrace();
                }
                dis();
                clear();
    }//GEN-LAST:event_insertActionPerformed
public void en()
    {
        c_key.setEnabled(true);
                c_name.setEnabled(true);
                c_add.setEnabled(true);
                c_gen.setEnabled(true);
                c_dob.setEnabled(true);
                c_mob.setEnabled(true);
               

    }
    public void dis()
    {
                ch_ckey.setEnabled(false);
                c_key.setEnabled(false);
                c_name.setEnabled(false);
                c_add.setEnabled(false);
                c_dob.setEnabled(false);
                c_mob.setEnabled(false);
                
                c_gen.setEnabled(false);
                insert.setEnabled(false);
                update.setEnabled(false);
                delete.setEnabled(false);
    }
    public void clear()
    {
       c_key.setText("");
                c_name.setText("");
                c_add.setText("");
                c_gen.setText("");
                c_dob.setText("");
                c_mob.setText("");
                 
                ch_ckey.removeAllItems();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Claimant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Claimant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Claimant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Claimant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Claimant().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField c_add;
    private javax.swing.JTextField c_dob;
    private javax.swing.JTextField c_gen;
    private javax.swing.JTextField c_key;
    private javax.swing.JTextField c_mob;
    private javax.swing.JTextField c_name;
    private javax.swing.JComboBox<String> ch_ckey;
    private javax.swing.JComboBox<String> choose;
    private javax.swing.JButton delete;
    private javax.swing.JButton insert;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tab;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
